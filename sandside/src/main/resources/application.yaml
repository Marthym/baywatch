---
spring:
  application.name: Baywatch

  datasource:
    url: jdbc:sqlite:file:${BAYWATCH_HOME:.}/.baywatch/data.db?cache=shared&journal_mode=WAL&synchronous=NORMAL&read_uncommitted=true
    driver-class-name: org.sqlite.JDBC
    username: baywatch
    password: hasselhoff
    hikari:
      data-source-properties.foreign_keys=true: true
#      maximum-pool-size: 1
  jooq:
    sql-dialect: sqlite
  graphql:
    graphiql.enabled: ${BAYWATCH_GRAPHIQL_ENABLE:false}
    schema.introspection.enabled: ${BAYWATCH_GRAPHQL_INTROSPECTION:false}
    path: /api/g

server:
  port: ${BAYWATCH_SERVER_PORT:8081}
  error:
    include-message: ALWAYS

management:
  endpoints.web.exposure.include: prometheus,health
  metrics.distribution.percentiles-histogram:
    http.server.requests: true

logging:
  # Avoid infinite stacktrace due to reactor
  exception-conversion-word: "%wEx{full, reactor.core.publisher}"
  level:
    root: INFO
    org.jooq: WARN
    fr.ght1pc9kc.baywatch: ${BAYWATCH_LOG_LEVEL:DEBUG}
    fr.ght1pc9kc.scraphead: ${BAYWATCH_LOG_LEVEL:DEBUG}
#    fr.ght1pc9kc.baywatch.indexer: TRACE
    # Avoid unwanted log error ...
    org.springframework:
      boot.autoconfigure.jooq.JooqExceptionTranslator: OFF
#      graphql: DEBUG
    reactor.netty.http.client: ERROR

baywatch:
  base-route: /api
  security:
    cookie:
      name: X-TOKEN
      validity: ${BAYWATCH_COOKIE_VALIDITY:24h}
    jwt.validity: ${BAYWATCH_TOKEN_VALIDITY:1h}
  scraper:
    enable: ${BAYWATCH_SCRAPER_ENABLE:true}
    frequency: ${BAYWATCH_SCRAPER_FREQUENCY:1h}
    conservation: ${BAYWATCH_SCRAPER_CONSERVATION:3m}
    timeout: ${BAYWATCH_SCRAPER_TIMEOUT:2s}
    dns.timeout: ${BAYWATCH_DNS_TIMEOUT:10s}
  indexer:
    enable: ${BAYWATCH_INDEXER_ENABLE:true}
    directory: ${BAYWATCH_HOME:.}/.baywatch/feedidx
  imgproxy:
    enable: ${BAYWATCH_IMGPROXY_ENABLE:false}
    signingKey: ${BAYWATCH_IMGPROXY_SIGNKEY:}
    signingSalt: ${BAYWATCH_IMGPROXY_SALT:}
    pathBase: ${BAYWATCH_IMGPROXY_BASEPATH:/img}
